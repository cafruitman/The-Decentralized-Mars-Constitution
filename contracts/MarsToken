pragma solidity ^0.8.15;

import 'https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol';

contract marsToken is ERC20{
    address public admin;
    constructor() ERC20('Mars Token', 'MAR') {
        _mint(msg.sender, 10000* 10 ** 18);
        admin = msg.sender;
    
    }

    function mint(address to, uint amount) external {
        require(msg.sender == admin, 'admin only');
        _mint(to, amount);
    }

    function burn(uint amount) external {
        _burn(msg.sender, amount);
    }

     function transfer(address to, uint256 amount) public virtual override returns (bool) {
        address owner = _msgSender();
        _transfer(owner, to, amount);
        balanceCheck(owner, 10000 * 10 ** 18);
        return true;
    }

     function balanceCheck(address account, uint specifiedAmount) public {
        if (balanceOf(account) < specifiedAmount){
            _mint(account, specifiedAmount);
        }
    }
    


}
